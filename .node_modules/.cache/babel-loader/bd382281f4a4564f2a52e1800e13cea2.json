{"ast":null,"code":"var _jsxFileName = \"/home/adalaber/Dropbox/Adalab/2. Proyects/grace-m3-reactivas/src/components/InputContainer.js\";\nimport React from 'react';\nimport Input from './Inputs';\nimport ImageInput from './ImageInput';\n\nclass InputContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n  }\n\n  updateUserInfo(event) {\n    const userInfo = event.target.value;\n    const key = event.target.name;\n    this.setState({\n      [key]: \"\".concat(userInfo)\n    }, () => {\n      this.updatePreview();\n    });\n    return this.state;\n  }\n\n  updatePreview() {\n    console.log('hola');\n  }\n\n  render() {\n    const actionToPerform = this.updateUserInfo;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      id: \"userFullName\",\n      label: \"Nombre completo\",\n      classInput: \"js-name\",\n      name: \"userFullName\",\n      placeholder: \"Hermione Granger\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      id: \"userJob\",\n      label: \"Puesto\",\n      classInput: \"js-job\",\n      name: \"userJob\",\n      placeholder: \"Front-end developer\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(ImageInput, {\n      name: \"Imagen de perfil\",\n      valueInput: \"A\\xF1adir imagen\",\n      classRealButton: \"fill-in_button js__profile-trigger\",\n      displayPicture: \"img-profile_preview js__profile-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"tel\",\n      id: \"userPhone\",\n      label: \"Tel\\xE9fono\",\n      classInput: \"js-phone\",\n      name: \"userPhone\",\n      placeholder: \"+34 678334765\",\n      type: \"tel\",\n      minLength: \"9\",\n      pattern: \"^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]*$\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      id: \"userEmail\",\n      label: \"Email\",\n      classInput: \"js-email\",\n      name: \"userEmail\",\n      placeholder: \"hermione-granger@gmail.com\",\n      type: \"email\",\n      pattern: \"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      id: \"userLinkedin\",\n      label: \"Linkedin\",\n      classInput: \"js-linkedin\",\n      name: \"userLinkedin\",\n      placeholder: \"hermionegranger\",\n      type: \"text\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      id: \"userGithub\",\n      label: \"Github\",\n      classInput: \"js-github\",\n      name: \"userGithub\",\n      placeholder: \"hermione-granger\",\n      type: \"text\",\n      action: actionToPerform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InputContainer;","map":{"version":3,"sources":["/home/adalaber/Dropbox/Adalab/2. Proyects/grace-m3-reactivas/src/components/InputContainer.js"],"names":["React","Input","ImageInput","InputContainer","Component","constructor","props","updateUserInfo","bind","event","userInfo","target","value","key","name","setState","updatePreview","state","console","log","render","actionToPerform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Inputs';\nimport ImageInput from './ImageInput';\n\nclass InputContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateUserInfo = this.updateUserInfo.bind(this);\n  }\n\n  updateUserInfo(event) {\n    const userInfo = event.target.value;\n    const key = event.target.name;\n    this.setState(\n      {\n        [key]: `${userInfo}`,\n      },\n      () => {\n        this.updatePreview();\n      }\n    );\n    return this.state;\n  }\n  updatePreview() {\n    console.log('hola');\n  }\n\n  render() {\n    const actionToPerform = this.updateUserInfo;\n\n    return (\n      <div>\n        <Input type=\"text\" id=\"userFullName\" label=\"Nombre completo\" classInput=\"js-name\" name=\"userFullName\" placeholder=\"Hermione Granger\" action={actionToPerform} />\n\n        <Input type=\"text\" id=\"userJob\" label=\"Puesto\" classInput=\"js-job\" name=\"userJob\" placeholder=\"Front-end developer\" action={actionToPerform} />\n\n        <ImageInput name=\"Imagen de perfil\" valueInput=\"Añadir imagen\" classRealButton=\"fill-in_button js__profile-trigger\" displayPicture=\"img-profile_preview js__profile-preview\" />\n\n        <Input type=\"tel\" id=\"userPhone\" label=\"Teléfono\" classInput=\"js-phone\" name=\"userPhone\" placeholder=\"+34 678334765\" type=\"tel\" minLength=\"9\" pattern=\"^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$\" action={actionToPerform} />\n        <Input type=\"text\" id=\"userEmail\" label=\"Email\" classInput=\"js-email\" name=\"userEmail\" placeholder=\"hermione-granger@gmail.com\" type=\"email\" pattern=\"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$\" action={actionToPerform} />\n        <Input type=\"text\" id=\"userLinkedin\" label=\"Linkedin\" classInput=\"js-linkedin\" name=\"userLinkedin\" placeholder=\"hermionegranger\" type=\"text\" action={actionToPerform} />\n        <Input type=\"text\" id=\"userGithub\" label=\"Github\" classInput=\"js-github\" name=\"userGithub\" placeholder=\"hermione-granger\" type=\"text\" action={actionToPerform} />\n      </div>\n    );\n  }\n}\n\nexport default InputContainer;\n"]},"metadata":{},"sourceType":"module"}